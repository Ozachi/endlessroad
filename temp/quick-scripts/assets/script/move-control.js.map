{"version":3,"sources":["move-control.js"],"names":["cc","Class","extends","Component","properties","_left","_right","_up","_down","_jumping","jumpY","speedX","_speedY","g","_leftBlock","_rightBlock","_upBlock","_downBlock","_anim","_animState","onLoad","getComponent","Animation","systemEvent","on","onKeyDown","onKeyUp","manager","director","getCollisionManager","enabled","onCollisionEnter","other","self","node","group","blockArray","selfAabb","world","aabb","otherAabb","selfPreAabb","preAabb","otherPreAabb","xMax","xMin","worldPositionX","center","x","Math","abs","parent","convertToNodeSpaceAR","v2","push","yMax","yMin","worldPositionY","y","blockArrays","undefined","name","onCollisionExit","item","e","keyCode","KEY","a","scaleX","d","j","changeAnim","stop","play","update","dt","currentSpeedY","min"],"mappings":"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","file":"move-control.js","sourceRoot":"..\\..\\..\\..\\assets\\script","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        _left: false,\r\n        _right: false,\r\n        _up: false,\r\n        _down: false,\r\n\r\n        _jumping: false,\r\n        jumpY: 40,\r\n        speedX: 5,\r\n        _speedY: 0,\r\n        g: -10,\r\n\r\n        _leftBlock: 0,\r\n        _rightBlock: 0,\r\n        _upBlock: 0,\r\n        _downBlock: 0,\r\n\r\n        _anim: null,\r\n        _animState : null,\r\n    },\r\n\r\n    onLoad: function () {\r\n        this._anim = this.getComponent(cc.Animation);\r\n        cc.systemEvent.on('keydown',this.onKeyDown,this);\r\n        cc.systemEvent.on('keyup',this.onKeyUp,this);\r\n\r\n        let manager = cc.director.getCollisionManager();\r\n        manager.enabled = true;\r\n    },\r\n\r\n    onCollisionEnter: function(other,self){\r\n\r\n        if(other.node.group == 'btn' || other.node.group == 'toggle'|| other.node.group == 'gate' || other.node.group == 'danger'){\r\n            return;\r\n        }\r\n\r\n        let blockArray = [];\r\n        let selfAabb = self.world.aabb;\r\n        let otherAabb = other.world.aabb;\r\n        let selfPreAabb = self.world.preAabb;\r\n        let otherPreAabb = other.world.preAabb;\r\n\r\n        if(selfPreAabb.xMax <= otherAabb.xMin && selfAabb.xMax >= otherAabb.xMin){\r\n            //right block\r\n            //console.log('right');\r\n            let worldPositionX = selfAabb.center.x - Math.abs(otherAabb.xMin - selfAabb.xMax);\r\n            this.node.x = this.node.parent.convertToNodeSpaceAR(cc.v2(worldPositionX,0)).x;\r\n            blockArray.push(\"_rightBlock\");\r\n            this._rightBlock++;\r\n        }\r\n        if(selfPreAabb.xMin >= otherAabb.xMax && selfAabb.xMin <= otherAabb.xMax){\r\n            //left block\r\n            //console.log('left');\r\n            let worldPositionX = selfAabb.center.x  +  Math.abs(otherAabb.xMax - selfAabb.xMin);\r\n            this.node.x = this.node.parent.convertToNodeSpaceAR(cc.v2(worldPositionX,0)).x;\r\n            blockArray.push(\"_leftBlock\");\r\n            this._leftBlock++;\r\n        }\r\n        if(selfPreAabb.yMax <= otherAabb.yMin && selfAabb.yMax >= otherAabb.yMin){\r\n            //up block\r\n            //console.log('up');\r\n            let worldPositionY = selfAabb.center.y - Math.abs(otherAabb.yMin - selfAabb.yMax);\r\n            this.node.y = this.node.parent.convertToNodeSpaceAR(cc.v2(0,worldPositionY)).y;\r\n            blockArray.push(\"_upBlock\");\r\n            this._upBlock++;\r\n        }\r\n        if(selfPreAabb.yMin >= otherAabb.yMax && selfAabb.yMin <= otherAabb.yMax){\r\n            //down block\r\n            //console.log('down');\r\n            let worldPositionY = selfAabb.center.y + Math.abs(otherAabb.yMax - selfAabb.yMin);\r\n            this.node.y = this.node.parent.convertToNodeSpaceAR(cc.v2(0,worldPositionY)).y;\r\n            blockArray.push(\"_downBlock\");\r\n            this._jumping = false;\r\n            this._downBlock++;\r\n        }\r\n\r\n        if(other.blockArrays == undefined){\r\n            other.blockArrays = [];\r\n        }\r\n        other.blockArrays[this.node.name] = blockArray;\r\n        \r\n    },\r\n\r\n\r\n\r\n    onCollisionExit: function(other,self){\r\n        if(other.node.group == 'btn' || other.node.group == 'toggle'|| other.node.group == 'gate' || other.node.group == 'danger'){\r\n            return;\r\n        }\r\n        if(other.blockArrays && other.blockArrays[this.node.name] != undefined){\r\n            let blockArray = other.blockArrays[this.node.name]\r\n            for(let item of blockArray){\r\n                this[item]--;\r\n            }\r\n        }\r\n    },\r\n\r\n    onKeyDown: function(e){\r\n        switch(e.keyCode){//离奇bug \r\n            case cc.KEY.a: {this._left = true;this.node.scaleX = -1;break;}\r\n            case cc.KEY.d: {this._right = true;this.node.scaleX = 1;break;}\r\n            case cc.KEY.j: {if(!this._jumping){this._up = true;this._jumping = true;}break;}\r\n        };\r\n        this.changeAnim();\r\n    },\r\n\r\n    onKeyUp: function(e){\r\n        switch(e.keyCode){\r\n            case cc.KEY.a: {this._left = false;break;}\r\n            case cc.KEY.d: {this._right = false;break;}\r\n            //case cc.KEY.up: {this._up = false;this._jumping = true;break;}\r\n        }\r\n        this.changeAnim();\r\n    },\r\n    //忘记录了\r\n    //刚刚做了个帧动画\r\n\r\n    changeAnim: function(){\r\n        //check jump\r\n        if(this._jumping){\r\n            if(!this._animState || this._animState.name !== 'jump'){\r\n                this._anim.stop();\r\n                this._animState = this._anim.play('jump');\r\n            }\r\n        }\r\n        //check move\r\n        else if(this._left == false && this._right == true ||\r\n           this._left == true && this._right == false){\r\n               if(!this._animState || this._animState.name !== 'move'){\r\n                    this._anim.stop();\r\n                    this._animState = this._anim.play('move');\r\n               }\r\n           }\r\n        //check idle\r\n        else if(this._left == false && this._right == false ||\r\n                this._left == true && this._right == true){\r\n                    if(!this._animState || this._animState.name !== 'idle'){\r\n                        this._anim.stop();\r\n                        this._animState = this._anim.play('idle');\r\n                    }\r\n                }\r\n    },//等会简单演示下帧动画的制作吧。。\r\n\r\n\r\n    update: function(dt){\r\n        if(this._left && !this._leftBlock){this.node.x -= this.speedX};\r\n        if(this._right && !this._rightBlock){this.node.x += this.speedX};\r\n        \r\n        if(!this._downBlock){\r\n            this._speedY += this.g * dt;\r\n        }else{\r\n            this._speedY = 0;\r\n            this._jumping = false;\r\n            this.changeAnim();\r\n        }\r\n        if(this._up){\r\n            this._speedY = this.jumpY;\r\n            this._up = false;\r\n            this._jumping = true;\r\n        }\r\n        let currentSpeedY = this._speedY;\r\n        if(!!this._upBlock){\r\n            currentSpeedY = Math.min(this._speedY,0);\r\n        }\r\n        this.node.y += currentSpeedY * dt;\r\n    }\r\n\r\n});\r\n"]}